{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "AdminUserName": {
      "type": "string"
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "VirtualNetworkName": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D2_v2",
        "Standard_F2"
      ]
    },
    "subnetName": {
      "type": "string"
    },
    "virtualNetResourceGroupName": {
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    },
    "DSCUpdateTagVersion": {
      "type": "string",
      "defaultValue": "1.0",
      "metadata": {
        "description": "This value must be changed from a previous deployment to ensure the extension will run"
      }
    },
    "domainName": {
      "type": "string"
    },
    "NetBiosDomainname": {
      "type": "string"
    }
  },

  "variables": {
    "VMNames": [
      "IIS",
      "ADFS",
      "PROXY1",
      "DC1"
    ],
    "VnetID": "[resourceId(parameters('virtualNetResourceGroupName'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkname'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "ImagePublisher": "MicrosoftWindowsServer",
    "ImageOffer": "WindowsServer",
    "WindowsOSVersion": "2012-R2-Datacenter",
    "DcDscConfigurationFunction": "DCConfig.ps1\\DcConfig",
    "DscConfigDataFile": "ConfigDataAD.psd1",
    "projectName": "ADSimpleLab",
    "DSCArchiveFolder": "DSC",
    "DSCArchiveFileName": "DSC.zip",
    "customScriptFolder": "CustomScripts",
    "customScriptFiles": [
      "Import.ps1",
      "Groups.csv",
      "Members.csv",
      "Microsoft.Rba.LogFunctions.ps1",
      "OUs.csv",
      "Users.csv"
    ]

  },
  "resources": [
    //DC NIC
    {
      "comments": "# DC NIC",
      "name": "[concat(variables('VMNames')[3],'NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DC NIC"
      },
      "apiVersion": "2015-06-15",
      "dependsOn": [
      ],

      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    // IIS Nic
    {
      "comments": "# IIS NIC",
      "name": "[concat(variables('VMNames')[0],'NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
      ],
      "tags": {
        "displayName": "IIS NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    //ADFS Nic
    {
      "comments": "# ADFS NIC",
      "name": "[concat(variables('VMNames')[1],'NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
      ],
      "tags": {
        "displayName": "ADFS NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"

              }
            }
          }
        ]
      }
    },
    //PROXY NIC
    {
      "comments": "# PROXY NIC",
      "name": "[concat(variables('VMNames')[2],'NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
      ],
      "tags": {
        "displayName": "PROXY NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    }, // DC VM - VM promoted as Domain Controller, Enterprise Root CA is installed
    {
      "comments": "# DC VM",
      "name": "[variables('VMNames')[3]]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('VMNames')[3],'NIC')]"
      ],
      "tags": {
        "displayName": "DC"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('VMNames')[3]]",
          "adminUsername": "[parameters('AdminUsername')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "dataDisks": [
            {
              "diskSizeGB": 20,
              "lun": 0,
              "CreateOption": "Empty"
            }
          ],
          "imageReference": {
            "publisher": "[variables('ImagePublisher')]",
            "offer": "[variables('ImageOffer')]",
            "sku": "[variables('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VMNames')[3],'NIC'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "DCConfig",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('VMNames')[3])]"
          ],
          "tags": {
            "displayName": "DCConfig"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.13",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'dsc.zip')]",
              "sasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationFunction": "[variables('DcDscConfigurationFunction')]",
              "properties": {
                "nodeName": "localhost",
                "domainName": "[parameters('domainName')]",
                "NetBiosDomainname": "[parameters('NetBiosDomainname')]",
                "DomainAdminCredentials": {
                  "UserName": "[parameters('AdminUserName')]",
                  "Password": "PrivateSettingsRef:DomainAdminPassword"
                }
              }
            },
            "protectedSettings": {
              "dataBlobUri": "[concat(parameters('_artifactsLocation'),'/',variables('projectName'), '/DSC/', variables('DscConfigDataFile'), parameters('_artifactsLocationSasToken'))]",
              "items": {
                "DomainAdminPassword": "[parameters('AdminPassword')]"
              }
            }
          }
        },
        // Importing users and groups
        {
          "apiVersion": "2015-05-01-preview",
          "type": "extensions",
          "name": "ImportActivity",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',variables('VMNames')[3])]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('VMNames')[3],'/extensions/DCConfig')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), '/', variables('projectName'),'/',variables('customScriptFolder'), '/',  variables('customScriptFiles')[0], parameters('_artifactsLocationSasToken'))]",
                "[concat(parameters('_artifactsLocation'), '/', variables('projectName'),'/',variables('customScriptFolder'), '/',  variables('customScriptFiles')[1], parameters('_artifactsLocationSasToken'))]",
                "[concat(parameters('_artifactsLocation'), '/', variables('projectName'),'/',variables('customScriptFolder'), '/',  variables('customScriptFiles')[2], parameters('_artifactsLocationSasToken'))]",
                "[concat(parameters('_artifactsLocation'), '/', variables('projectName'),'/',variables('customScriptFolder'), '/',  variables('customScriptFiles')[3], parameters('_artifactsLocationSasToken'))]",
                "[concat(parameters('_artifactsLocation'), '/', variables('projectName'),'/',variables('customScriptFolder'), '/',  variables('customScriptFiles')[4], parameters('_artifactsLocationSasToken'))]",
                "[concat(parameters('_artifactsLocation'), '/', variables('projectName'),'/',variables('customScriptFolder'), '/',  variables('customScriptFiles')[5], parameters('_artifactsLocationSasToken'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('projectName'),'/', variables('customScriptFolder'), '/', variables('customScriptFiles')[0])]"
            }
          }
        }

      ]
        },
      //IIS VM - IIS Feature and dependencies installed
      {
        "comments": "# IIS VM",
        "name": "[variables('VMNames')[0]]",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
          "[concat('Microsoft.Network/networkInterfaces/', variables('VMNames')[0],'NIC')]"
          //"[concat('Microsoft.Compute/virtualMachines/', variables('VMNames')[3],'/extensions/DCConfig')]"
        ],
        "tags": {
          "displayName": "IIS"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('virtualMachineSize')]"
          },
          "osProfile": {
            "computerName": "[variables('VMNames')[0]]",
            "adminUsername": "[parameters('AdminUsername')]",
            "adminPassword": "[parameters('AdminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('ImagePublisher')]",
              "offer": "[variables('ImageOffer')]",
              "sku": "[variables('WindowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VMNames')[0],'NIC'))]"
              }
            ]
          }
        }
        "resources": [
        // Join domain - Json AD Domain Extension
           {
            "comments": "Join domain - JsonADDomainExtension",
            "apiVersion": "2015-06-15",
            "type": "extensions",
            "name": "joindomain",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/',variables('VMNames')[0])]",
              "[concat('Microsoft.Compute/virtualMachines/', variables('VMNames')[4],'/extensions/DCConfig')]"
            ],
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "JsonADDomainExtension",
              "typeHandlerVersion": "1.0",
              "settings": {
                "Name": "[variables('domainFQDN')]",
                "User": "[concat(variables('domainFQDN'),'\\',parameters('AdminUserName'))]",
                "Restart": "true",
                "Options": "[variables('domainJoinOptions')]"
              },
              "protectedsettings": {
                "Password": "[parameters('AdminPassword')]"
              }
            }
          }//,
          // Setup IIS - Powershell DSC
        //  {
        //    "name": "IISConfig",
        //    "type": "extensions",
        //    "location": "[resourceGroup().location]",
        //    "apiVersion": "2015-06-15",
        //    "dependsOn": [
        //      "[concat('Microsoft.Compute/virtualMachines/',variables('VMNames')[0])]",
        //      "[concat('Microsoft.Compute/virtualMachines/', variables('VMNames')[0],'/extensions/joindomain')]",
        //      "[concat('Microsoft.Compute/virtualMachines/', variables('VMNames')[4],'/extensions/DCConfig')]"
        //    ],
        //    "tags": {
        //      "displayName": "IISConfig"
        //    },
        //    "properties": {
        //      "publisher": "Microsoft.Powershell",
        //      "type": "DSC",
        //      "typeHandlerVersion": "2.13",
        //      "autoUpgradeMinorVersion": true,
        //      "settings": {
        //        "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'dsc.zip')]",
        //        "sasToken": "[parameters('_artifactsLocationSasToken')]",
        //        "configurationFunction": "[variables('IISDscConfigurationFunction')]"
        //      }
        //    }
        //  }
        ]
      },
     //ADFS VM - OS Only, no ADFS component installed
    {
      "comments": "# ADFS VM",
      "name": "[variables('VMNames')[1]]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('VMNames')[1],'NIC')]"
      ],
      "tags": {
        "displayName": "ADFS"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[variables('VMNames')[1]]",
          "adminUsername": "[parameters('AdminUsername')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ImagePublisher')]",
            "offer": "[variables('ImageOffer')]",
            "sku": "[variables('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VMNames')[1],'NIC'))]"
            }
          ]
        }
      }
      "resources": [
        // Join domain - Json AD Domain Extension
        {
          "comments": "Join domain - JsonADDomainExtension",
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "joindomain",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',variables('VMNames')[1])]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('VMNames')[4],'/extensions/DCConfig')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.0",
            "settings": {
              "Name": "[variables('domainFQDN')]",
              "User": "[concat(variables('domainFQDN'), '\\', parameters('AdminUserName'))]",
              "Restart": "true",
              "Options": "[variables('domainJoinOptions')]"
            },
            "protectedsettings": {
              "Password": "[parameters('AdminPassword')]"
            }
          }
        }
      ]
    },
     //WEB APPLICATION PROXY VMs - OS Only, no WAP component installed
    {
      "comments": "# PROXY VMs",
      "name": "[variables('VMNames')[2]]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('VMNames')[2],'NIC')]"
      ],
      "tags": {
        "displayName": "PROXY"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('VMNames')[2])]",
          "adminUsername": "[parameters('AdminUsername')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ImagePublisher')]",
            "offer": "[variables('ImageOffer')]",
            "sku": "[variables('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VMNames')[2],'NIC'))]"
            }
          ]
        }
      }
    }

  ],
    "outputs": {
    }
}
